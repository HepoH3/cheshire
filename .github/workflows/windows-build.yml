# Copyright 2022 ETH Zurich and University of Bologna.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

# Author: Paul Scheffler <paulsc@iis.ee.ethz.ch>

name: build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    strategy:
      matrix:
        target: [sw, hw, sim]
      fail-fast: false
    runs-on: windows-2025

    steps:
      - name: Setup WSL
        uses: vedantmgoyal9/setup-wsl2@main
        with:
          distro: Ubuntu

      - name: Set custom WSL mount root
        run: |
          wsl bash -c "echo -e '[automount]\nroot = /' | sudo tee /etc/wsl.conf"
          wsl --shutdown
# It recommended to wait at least 8 seconds in order to wsl shutdown properly
          Start-Sleep -Seconds 10

      - name: Install Dependencies
        run: |
          wsl bash -c "set -e; sudo apt update; for i in {1..5}; do sudo apt install -y python3 python3-pip python3-venv unzip gdisk && break; echo 'APT failed, retrying (\$i)...'; sleep 10; done"

      - name: Install Bender
        run: |
          wsl bash -c 'curl -f -sSL https://github.com/pulp-platform/bender/releases/download/v0.27.1/bender-0.27.1-x86_64-linux-gnu-ubuntu22.04.tar.gz -o $HOME/bender.tar.gz'
          wsl bash -c 'tar -xzf $HOME/bender.tar.gz -C $HOME'
          wsl bash -c 'chmod +x $HOME/bender'

      - name: Install RISC-V GCC toolchain
        run: |
          wsl bash -c 'set -e && curl -f -sSL https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2023.03.14/riscv64-elf-ubuntu-22.04-nightly-2023.03.14-nightly.tar.gz -o toolchain.tar.gz && mkdir -p $HOME/riscv && tar -xzf toolchain.tar.gz -C $HOME/riscv --strip-components=1'

      - name: Configure git to avoid CRLF issues
        run: |
          wsl git config --global core.autocrlf input

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Python requirements
        run: wsl pip3 install -r requirements.txt

      - name: Build target
        run: |
          wsl bash -c 'export CHS_SW_GCC_BINROOT=$HOME/riscv/bin BENDER=$HOME/bender && make ${{ matrix.target }}-all'

      - name: Check whether clean
        run: |
          wsl git status
          wsl bash -c 'test -z "$(git status --porcelain --ignore-submodules)"'
